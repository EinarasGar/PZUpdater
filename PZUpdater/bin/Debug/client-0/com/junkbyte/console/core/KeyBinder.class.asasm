class
 refid "com.junkbyte.console.core:KeyBinder"
 instance QName(PackageNamespace("com.junkbyte.console.core"), "KeyBinder")
  extends QName(PackageNamespace("com.junkbyte.console.core"), "ConsoleCore")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("com.junkbyte.console.core:KeyBinder")
  iinit
   refid "com.junkbyte.console.core:KeyBinder/instance/init"
   param QName(PackageNamespace("com.junkbyte.console"), "Console")
   body
    maxstack 4
    localcount 2
    initscopedepth 6
    maxscopedepth 7
    code
     getlocal0
     pushscope

     getlocal0
     newobject           0
     initproperty        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_binds")

     getlocal0
     getlocal1
     constructsuper      1

     getlocal1
     getproperty         QName(PackageNamespace(""), "cl")
     pushstring          "keybinds"
     getlocal0
     getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "printBinds")
     pushstring          "List all keybinds used"
     callpropvoid        QName(PackageNamespace(""), "addCLCmd"), 3

     returnvoid
    end ; code
   end ; body
  end ; method
  trait slot QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_passInd") type QName(PackageNamespace(""), "int") end
  trait slot QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_binds") type QName(PackageNamespace(""), "Object") end
  trait slot QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_warns") type QName(PackageNamespace(""), "uint") end
  trait method QName(PackageNamespace(""), "bindKey")
   method
    refid "com.junkbyte.console.core:KeyBinder/instance/bindKey"
    param QName(PackageNamespace("com.junkbyte.console"), "KeyBind")
    param QName(PackageNamespace(""), "Function")
    param QName(PackageNamespace(""), "Array")
    returns QName(PackageNamespace(""), "void")
    flag HAS_OPTIONAL
    optional Null()
    body
     maxstack 4
     localcount 4
     initscopedepth 6
     maxscopedepth 7
     code
      getlocal0
      pushscope

      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "config")
      getproperty         QName(PackageNamespace(""), "keystrokePassword")
      convert_b
      dup
      iffalse             L23

      pop
      getlocal1
      getproperty         QName(PackageNamespace(""), "useKeyCode")
      not
      dup
      iffalse             L23

      pop
      getlocal1
      getproperty         QName(PackageNamespace(""), "key")
      pushbyte            0
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "charAt"), 1
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "config")
      getproperty         QName(PackageNamespace(""), "keystrokePassword")
      pushbyte            0
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "charAt"), 1
      equals
L23:
      iffalse             L34

      findpropstrict      QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report")
      pushstring          "Error: KeyBind ["
      getlocal1
      getproperty         QName(PackageNamespace(""), "key")
      add
      pushstring          "] is conflicting with Console password."
      add
      pushbyte            9
      callpropvoid        QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report"), 2

      returnvoid

L34:
      getlocal2
      pushnull
      ifne                L44

      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_binds")
      getlocal1
      getproperty         QName(PackageNamespace(""), "key")
      deleteproperty      MultinameL([PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#1"), PackageNamespace("com.junkbyte.console.core"), PackageInternalNs("com.junkbyte.console.core"), ProtectedNamespace("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"), StaticProtectedNs("flash.events:EventDispatcher")])
      pop
      jump                L52

L44:
      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_binds")
      getlocal1
      getproperty         QName(PackageNamespace(""), "key")
      getlocal2
      getlocal3
      newarray            2
      setproperty         MultinameL([PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#1"), PackageNamespace("com.junkbyte.console.core"), PackageInternalNs("com.junkbyte.console.core"), ProtectedNamespace("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"), StaticProtectedNs("flash.events:EventDispatcher")])

L52:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "keyDownHandler")
   method
    refid "com.junkbyte.console.core:KeyBinder/instance/keyDownHandler"
    param QName(PackageNamespace("flash.events"), "KeyboardEvent")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 2
     initscopedepth 6
     maxscopedepth 7
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      pushfalse
      callpropvoid        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "handleKeyEvent"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "keyUpHandler")
   method
    refid "com.junkbyte.console.core:KeyBinder/instance/keyUpHandler"
    param QName(PackageNamespace("flash.events"), "KeyboardEvent")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 3
     localcount 2
     initscopedepth 6
     maxscopedepth 7
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      pushtrue
      callpropvoid        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "handleKeyEvent"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "handleKeyEvent")
   method
    refid "com.junkbyte.console.core:KeyBinder/instance/com.junkbyte.console.core:KeyBinder/instance/handleKeyEvent"
    param QName(PackageNamespace("flash.events"), "KeyboardEvent")
    param QName(PackageNamespace(""), "Boolean")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 6
     localcount 7
     initscopedepth 6
     maxscopedepth 7
     code
      getlocal0
      pushscope

      pushnull
      coerce              QName(PackageNamespace("com.junkbyte.console"), "KeyBind")
      setlocal            4

      getlex              QName(PackageNamespace(""), "String")
      getlocal1
      getproperty         QName(PackageNamespace(""), "charCode")
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "fromCharCode"), 1
      coerce_s
      setlocal3

      getlocal2
      dup
      iffalse             L20

      pop
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "config")
      getproperty         QName(PackageNamespace(""), "keystrokePassword")
      pushnull
      equals
      not
L20:
      coerce_a
      convert_b
      dup
      iffalse             L28

      pop
      getlocal3
      coerce_a
      convert_b
L28:
      dup
      iffalse             L42

      pop
      getlocal3
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "config")
      getproperty         QName(PackageNamespace(""), "keystrokePassword")
      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_passInd")
      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_passInd")
      pushbyte            1
      add
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "substring"), 2
      equals
L42:
      iffalse             L131

      getlocal0
      dup
      setlocal            5

      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_passInd")
      increment_i
      setlocal            6

      getlocal            5
      getlocal            6
      setproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_passInd")

      kill                6
      kill                5
      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_passInd")
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "config")
      getproperty         QName(PackageNamespace(""), "keystrokePassword")
      getproperty         QName(PackageNamespace(""), "length")
      ifnge               L130

      getlocal0
      pushbyte            0
      initproperty        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_passInd")

      getlocal0
      callproperty        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "canTrigger"), 0
      iffalse             L111

      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "visible")
      convert_b
      dup
      iffalse             L77

      pop
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "panels")
      getproperty         QName(PackageNamespace(""), "mainPanel")
      getproperty         QName(PackageNamespace(""), "visible")
      not
L77:
      iffalse             L84

      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "panels")
      getproperty         QName(PackageNamespace(""), "mainPanel")
      pushtrue
      setproperty         QName(PackageNamespace(""), "visible")

      jump                L89

L84:
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "visible")
      not
      setproperty         QName(PackageNamespace(""), "visible")

L89:
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "visible")
      convert_b
      dup
      iffalse             L100

      pop
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "panels")
      getproperty         QName(PackageNamespace(""), "mainPanel")
      getproperty         QName(PackageNamespace(""), "visible")
      convert_b
L100:
      iffalse             L110

      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "panels")
      getproperty         QName(PackageNamespace(""), "mainPanel")
      pushtrue
      setproperty         QName(PackageNamespace(""), "visible")

      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "panels")
      getproperty         QName(PackageNamespace(""), "mainPanel")
      callpropvoid        QName(PackageNamespace(""), "moveBackSafePosition"), 0

L110:
      jump                L130

L111:
      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_warns")
      pushbyte            3
      ifnlt               L130

      getlocal0
      dup
      setlocal            5

      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_warns")
      increment
      setlocal            6

      getlocal            5
      getlocal            6
      setproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_warns")

      kill                6
      kill                5
      findpropstrict      QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report")
      pushstring          "Password did not trigger because you have focus on an input TextField."
      pushbyte            8
      callpropvoid        QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report"), 2

L130:
      jump                L171

L131:
      getlocal2
      iffalse             L136

      getlocal0
      pushbyte            0
      initproperty        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_passInd")

L136:
      findpropstrict      QName(PackageNamespace("com.junkbyte.console"), "KeyBind")
      getlocal1
      getproperty         QName(PackageNamespace(""), "keyCode")
      getlocal1
      getproperty         QName(PackageNamespace(""), "shiftKey")
      getlocal1
      getproperty         QName(PackageNamespace(""), "ctrlKey")
      getlocal1
      getproperty         QName(PackageNamespace(""), "altKey")
      getlocal2
      constructprop       QName(PackageNamespace("com.junkbyte.console"), "KeyBind"), 5
      coerce              QName(PackageNamespace("com.junkbyte.console"), "KeyBind")
      setlocal            4

      getlocal0
      getlocal            4
      getproperty         QName(PackageNamespace(""), "key")
      callpropvoid        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "tryRunKey"), 1

      getlocal3
      iffalse             L171

      findpropstrict      QName(PackageNamespace("com.junkbyte.console"), "KeyBind")
      getlocal3
      getlocal1
      getproperty         QName(PackageNamespace(""), "shiftKey")
      getlocal1
      getproperty         QName(PackageNamespace(""), "ctrlKey")
      getlocal1
      getproperty         QName(PackageNamespace(""), "altKey")
      getlocal2
      constructprop       QName(PackageNamespace("com.junkbyte.console"), "KeyBind"), 5
      coerce              QName(PackageNamespace("com.junkbyte.console"), "KeyBind")
      setlocal            4

      getlocal0
      getlocal            4
      getproperty         QName(PackageNamespace(""), "key")
      callpropvoid        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "tryRunKey"), 1

L171:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "printBinds")
   method
    refid "com.junkbyte.console.core:KeyBinder/instance/com.junkbyte.console.core:KeyBinder/instance/printBinds"
    returns QName(PackageNamespace(""), "void")
    flag NEED_REST
    body
     maxstack 3
     localcount 6
     initscopedepth 6
     maxscopedepth 7
     code
      getlocal0
      pushscope

      pushnull
      coerce_s
      setlocal3

      findpropstrict      QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report")
      pushstring          "Key binds:"
      pushbyte            -2
      callpropvoid        QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report"), 2

      pushbyte            0
      convert_u
      setlocal2

      pushbyte            0
      setlocal            4

      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_binds")
      coerce_a
      setlocal            5

      jump                L33

L19:
      label
      getlocal            5
      getlocal            4
      nextname
      coerce_s
      setlocal3

      getlocal2
      increment
      convert_u
      setlocal2

      findpropstrict      QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report")
      getlocal3
      pushbyte            -2
      callpropvoid        QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report"), 2

L33:
      hasnext2            5, 4
      iftrue              L19

      kill                5
      kill                4
      findpropstrict      QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report")
      pushstring          "--- Found "
      getlocal2
      add
      pushbyte            -2
      callpropvoid        QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report"), 2

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "tryRunKey")
   method
    refid "com.junkbyte.console.core:KeyBinder/instance/com.junkbyte.console.core:KeyBinder/instance/tryRunKey"
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 4
     localcount 5
     initscopedepth 6
     maxscopedepth 7
     code
      getlocal0
      pushscope

      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_binds")
      getlocal1
      getproperty         MultinameL([PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#1"), PackageNamespace("com.junkbyte.console.core"), PackageInternalNs("com.junkbyte.console.core"), ProtectedNamespace("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"), StaticProtectedNs("flash.events:EventDispatcher")])
      coerce              QName(PackageNamespace(""), "Array")
      setlocal2

      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "config")
      getproperty         QName(PackageNamespace(""), "keyBindsEnabled")
      convert_b
      dup
      iffalse             L16

      pop
      getlocal2
      convert_b
L16:
      iffalse             L54

      getlocal0
      callproperty        QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "canTrigger"), 0
      iffalse             L31

      getlocal2
      pushbyte            0
      getproperty         MultinameL([PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#1"), PackageNamespace("com.junkbyte.console.core"), PackageInternalNs("com.junkbyte.console.core"), ProtectedNamespace("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"), StaticProtectedNs("flash.events:EventDispatcher")])
      getlex              QName(PackageNamespace(""), "Function")
      astypelate
      pushnull
      getlocal2
      pushbyte            1
      getproperty         MultinameL([PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#1"), PackageNamespace("com.junkbyte.console.core"), PackageInternalNs("com.junkbyte.console.core"), ProtectedNamespace("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:KeyBinder"), StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"), StaticProtectedNs("flash.events:EventDispatcher")])
      callpropvoid        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "apply"), 2

      jump                L54

L31:
      getlocal0
      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_warns")
      pushbyte            3
      ifnlt               L54

      getlocal0
      dup
      setlocal3

      getproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_warns")
      increment
      setlocal            4

      getlocal3
      getlocal            4
      setproperty         QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "_warns")

      kill                4
      kill                3
      findpropstrict      QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report")
      pushstring          "Key bind ["
      getlocal1
      add
      pushstring          "] did not trigger because you have focus on an input TextField."
      add
      pushbyte            8
      callpropvoid        QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "report"), 2

L54:
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "com.junkbyte.console.core:KeyBinder/instance#0"), "canTrigger")
   method
    refid "com.junkbyte.console.core:KeyBinder/instance/com.junkbyte.console.core:KeyBinder/instance/canTrigger"
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 3
     localcount 3
     initscopedepth 6
     maxscopedepth 9
     code
      getlocal0
      pushscope

      pushnull
      coerce              QName(PackageNamespace("flash.text"), "TextField")
      setlocal1

L5:
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "stage")
      convert_b
      dup
      iffalse             L16

      pop
      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "stage")
      getproperty         QName(PackageNamespace(""), "focus")
      getlex              QName(PackageNamespace("flash.text"), "TextField")
      istypelate
L16:
      iffalse             L31

      getlex              QName(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"), "console")
      getproperty         QName(PackageNamespace(""), "stage")
      getproperty         QName(PackageNamespace(""), "focus")
      getlex              QName(PackageNamespace("flash.text"), "TextField")
      astypelate
      coerce              QName(PackageNamespace("flash.text"), "TextField")
      setlocal1

      getlocal1
      getproperty         QName(PackageNamespace(""), "type")
      getlex              QName(PackageNamespace("flash.text"), "TextFieldType")
      getproperty         QName(PackageNamespace(""), "INPUT")
      ifne                L31

      pushfalse
      returnvalue

L31:
      jump                L43

L32:
      getlocal0
      pushscope

      newcatch            0
      dup
      setlocal2

      dup
      pushscope

      swap
      setslot             1

      popscope
      kill                2
L43:
      pushtrue
      returnvalue
     end ; code
     try from L5 to L31 target L32 type QName(PackageNamespace(""), "Error") name QName(PackageNamespace(""), "err") end
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "com.junkbyte.console.core:KeyBinder/class/init"
  body
   maxstack 1
   localcount 1
   initscopedepth 5
   maxscopedepth 6
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
