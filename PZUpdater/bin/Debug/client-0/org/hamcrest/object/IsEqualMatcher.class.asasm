class
 refid "org.hamcrest.object:IsEqualMatcher"
 instance QName(PackageNamespace("org.hamcrest.object"), "IsEqualMatcher")
  extends QName(PackageNamespace("org.hamcrest"), "BaseMatcher")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("org.hamcrest.object:IsEqualMatcher")
  iinit
   refid "org.hamcrest.object:IsEqualMatcher/instance/init"
   param QName(PackageNamespace(""), "Object")
   body
    maxstack 2
    localcount 2
    initscopedepth 5
    maxscopedepth 6
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     findproperty        QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "_value")
     getlocal1
     initproperty        QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "_value")

     returnvoid
    end ; code
   end ; body
  end ; method
  trait method QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areEqual")
   method
    refid "org.hamcrest.object:IsEqualMatcher/instance/org.hamcrest.object:IsEqualMatcher/instance/areEqual"
    param QName(PackageNamespace(""), "Object")
    param QName(PackageNamespace(""), "Object")
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 4
     localcount 3
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      findpropstrict      QName(PackageNamespace(""), "isNaN")
      getlocal1
      getlex              QName(PackageNamespace(""), "Number")
      astypelate
      callproperty        QName(PackageNamespace(""), "isNaN"), 1
      iffalse             L14

      findpropstrict      QName(PackageNamespace(""), "isNaN")
      getlocal2
      getlex              QName(PackageNamespace(""), "Number")
      astypelate
      callproperty        QName(PackageNamespace(""), "isNaN"), 1
      returnvalue

L14:
      getlocal1
      pushnull
      ifne                L21

      getlocal2
      pushnull
      equals
      returnvalue

L21:
      getlocal1
      getlex              QName(PackageNamespace(""), "Array")
      istypelate
      iffalse             L41

      getlocal2
      getlex              QName(PackageNamespace(""), "Array")
      istypelate
      dup
      iffalse             L40

      pop
      findpropstrict      QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArraysEqual")
      getlocal1
      getlex              QName(PackageNamespace(""), "Array")
      astypelate
      getlocal2
      getlex              QName(PackageNamespace(""), "Array")
      astypelate
      callproperty        QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArraysEqual"), 2
      convert_b
L40:
      returnvalue

L41:
      getlocal1
      getlocal2
      equals
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait slot QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "_value") type QName(PackageNamespace(""), "Object") end
  trait method QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArraysEqual")
   method
    refid "org.hamcrest.object:IsEqualMatcher/instance/org.hamcrest.object:IsEqualMatcher/instance/areArraysEqual"
    param QName(PackageNamespace(""), "Array")
    param QName(PackageNamespace(""), "Array")
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 3
     localcount 3
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      findpropstrict      QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArraysLengthsEqual")
      getlocal1
      getlocal2
      callproperty        QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArraysLengthsEqual"), 2
      convert_b
      dup
      iffalse             L15

      pop
      findpropstrict      QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArrayElementsEqual")
      getlocal1
      getlocal2
      callproperty        QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArrayElementsEqual"), 2
      convert_b
L15:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "describeTo") flag OVERRIDE
   method
    refid "org.hamcrest.object:IsEqualMatcher/instance/describeTo"
    param QName(PackageNamespace("org.hamcrest"), "Description")
    returns QName(PackageNamespace(""), "void")
    body
     maxstack 2
     localcount 2
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal1
      getlex              QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "_value")
      callpropvoid        QName(Namespace("org.hamcrest:Description"), "appendValue"), 1

      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArrayElementsEqual")
   method
    refid "org.hamcrest.object:IsEqualMatcher/instance/org.hamcrest.object:IsEqualMatcher/instance/areArrayElementsEqual"
    param QName(PackageNamespace(""), "Array")
    param QName(PackageNamespace(""), "Array")
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 4
     localcount 5
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      pushbyte            0
      setlocal3

      getlocal1
      getproperty         QName(PackageNamespace(""), "length")
      convert_i
      setlocal            4

      jump                L22

L9:
      label
      findpropstrict      QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areEqual")
      getlocal1
      getlocal3
      getproperty         MultinameL([PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), PackageNamespace(""), PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance/org.hamcrest.object:IsEqualMatcher/instance/areArrayElementsEqual"), PackageNamespace("org.hamcrest.object"), PackageInternalNs("org.hamcrest.object"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("org.hamcrest.object:IsEqualMatcher"), StaticProtectedNs("org.hamcrest.object:IsEqualMatcher"), StaticProtectedNs("org.hamcrest:BaseMatcher"), StaticProtectedNs("Object")])
      getlocal2
      getlocal3
      getproperty         MultinameL([PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), PackageNamespace(""), PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance/org.hamcrest.object:IsEqualMatcher/instance/areArrayElementsEqual"), PackageNamespace("org.hamcrest.object"), PackageInternalNs("org.hamcrest.object"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("org.hamcrest.object:IsEqualMatcher"), StaticProtectedNs("org.hamcrest.object:IsEqualMatcher"), StaticProtectedNs("org.hamcrest:BaseMatcher"), StaticProtectedNs("Object")])
      callproperty        QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areEqual"), 2
      iftrue              L21

      pushfalse
      returnvalue

L21:
      inclocal_i          3
L22:
      getlocal3
      getlocal            4
      iflt                L9

      pushtrue
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "matches") flag OVERRIDE
   method
    refid "org.hamcrest.object:IsEqualMatcher/instance/matches"
    param QName(PackageNamespace(""), "Object")
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 3
     localcount 2
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      findpropstrict      QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areEqual")
      getlocal1
      getlex              QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "_value")
      callproperty        QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areEqual"), 2
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "org.hamcrest.object:IsEqualMatcher/instance"), "areArraysLengthsEqual")
   method
    refid "org.hamcrest.object:IsEqualMatcher/instance/org.hamcrest.object:IsEqualMatcher/instance/areArraysLengthsEqual"
    param QName(PackageNamespace(""), "Array")
    param QName(PackageNamespace(""), "Array")
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 2
     localcount 3
     initscopedepth 5
     maxscopedepth 6
     code
      getlocal0
      pushscope

      getlocal1
      getproperty         QName(PackageNamespace(""), "length")
      getlocal2
      getproperty         QName(PackageNamespace(""), "length")
      equals
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "org.hamcrest.object:IsEqualMatcher/class/init"
  body
   maxstack 1
   localcount 1
   initscopedepth 4
   maxscopedepth 5
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
