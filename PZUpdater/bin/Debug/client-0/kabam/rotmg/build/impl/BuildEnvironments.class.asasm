class
 refid "kabam.rotmg.build.impl:BuildEnvironments"
 instance QName(PackageNamespace("kabam.rotmg.build.impl"), "BuildEnvironments")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  flag FINAL
  flag PROTECTEDNS
  protectedns ProtectedNamespace("kabam.rotmg.build.impl:BuildEnvironments")
  iinit
   refid "kabam.rotmg.build.impl:BuildEnvironments/instance/init"
   body
    maxstack 1
    localcount 1
    initscopedepth 4
    maxscopedepth 5
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
  trait method QName(PackageNamespace(""), "getEnvironment")
   method
    refid "kabam.rotmg.build.impl:BuildEnvironments/instance/getEnvironment"
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
    body
     maxstack 2
     localcount 2
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlocal0
      getlocal1
      callproperty        QName(PrivateNamespace(null, "kabam.rotmg.build.impl:BuildEnvironments"), "isFixedIP"), 1
      iffalse             L10

      getlex              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      getproperty         QName(PackageNamespace(""), "FIXED_IP")
      coerce              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      jump                L14

L10:
      getlocal0
      getlocal1
      callproperty        QName(PrivateNamespace(null, "kabam.rotmg.build.impl:BuildEnvironments"), "getEnvironmentFromName"), 1
      coerce              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
L14:
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.rotmg.build.impl:BuildEnvironments"), "isFixedIP")
   method
    refid "kabam.rotmg.build.impl:BuildEnvironments/instance/kabam.rotmg.build.impl:BuildEnvironments/isFixedIP"
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace(""), "Boolean")
    body
     maxstack 2
     localcount 2
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      getlocal1
      getlex              QName(PrivateNamespace(null, "kabam.rotmg.build.impl:BuildEnvironments"), "IP_MATCHER")
      callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "match"), 1
      pushnull
      equals
      not
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PrivateNamespace(null, "kabam.rotmg.build.impl:BuildEnvironments"), "getEnvironmentFromName")
   method
    refid "kabam.rotmg.build.impl:BuildEnvironments/instance/kabam.rotmg.build.impl:BuildEnvironments/getEnvironmentFromName"
    param QName(PackageNamespace(""), "String")
    returns QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
    body
     maxstack 2
     localcount 3
     initscopedepth 4
     maxscopedepth 5
     code
      getlocal0
      pushscope

      jump                L33

L3:
      label
      getlex              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      getproperty         QName(PackageNamespace(""), "LOCALHOST")
      returnvalue

L7:
      label
      getlex              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      getproperty         QName(PackageNamespace(""), "PRIVATE")
      returnvalue

L11:
      label
      getlex              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      getproperty         QName(PackageNamespace(""), "DEV")
      returnvalue

L15:
      label
      getlex              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      getproperty         QName(PackageNamespace(""), "TESTING")
      returnvalue

L19:
      label
      getlex              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      getproperty         QName(PackageNamespace(""), "TESTING2")
      returnvalue

L23:
      label
      getlex              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      getproperty         QName(PackageNamespace(""), "PRODTEST")
      returnvalue

L27:
      label
      getlex              QName(PackageNamespace("kabam.rotmg.build.api"), "BuildEnvironment")
      getproperty         QName(PackageNamespace(""), "PRODUCTION")
      returnvalue

L31:
      label
      jump                L80

L33:
      getlocal1
      setlocal2

      getlex              QName(PackageNamespace(""), "LOCALHOST")
      getlocal2
      ifstrictne          L40

      pushbyte            0
      jump                L78

L40:
      getlex              QName(PackageNamespace(""), "PRIVATE")
      getlocal2
      ifstrictne          L45

      pushbyte            1
      jump                L78

L45:
      getlex              QName(PackageNamespace(""), "DEV")
      getlocal2
      ifstrictne          L50

      pushbyte            2
      jump                L78

L50:
      getlex              QName(PackageNamespace(""), "TESTING")
      getlocal2
      ifstrictne          L55

      pushbyte            3
      jump                L78

L55:
      getlex              QName(PackageNamespace(""), "TESTING2")
      getlocal2
      ifstrictne          L60

      pushbyte            4
      jump                L78

L60:
      getlex              QName(PackageNamespace(""), "PRODTEST")
      getlocal2
      ifstrictne          L65

      pushbyte            5
      jump                L78

L65:
      getlex              QName(PackageNamespace(""), "PRODUCTION")
      getlocal2
      ifstrictne          L70

      pushbyte            6
      jump                L78

L70:
      jump                L77

      ; 0x24
      ; 0x07
      ; 0x10
      ; 0x02
      ; 0x00
      ; 0x00
L77:
      pushbyte            7
L78:
      kill                2
      lookupswitch        L31, [L3, L7, L11, L15, L19, L23, L27, L31]

L80:
      pushnull
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
 end ; instance
 cinit
  refid "kabam.rotmg.build.impl:BuildEnvironments/class/init"
  body
   maxstack 3
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   code
    getlocal0
    pushscope

    findproperty        QName(PackageNamespace(""), "LOCALHOST")
    pushstring          "localhost"
    initproperty        QName(PackageNamespace(""), "LOCALHOST")

    findproperty        QName(PackageNamespace(""), "PRIVATE")
    pushstring          "private"
    initproperty        QName(PackageNamespace(""), "PRIVATE")

    findproperty        QName(PackageNamespace(""), "DEV")
    pushstring          "dev"
    initproperty        QName(PackageNamespace(""), "DEV")

    findproperty        QName(PackageNamespace(""), "TESTING")
    pushstring          "testing"
    initproperty        QName(PackageNamespace(""), "TESTING")

    findproperty        QName(PackageNamespace(""), "TESTING2")
    pushstring          "testing2"
    initproperty        QName(PackageNamespace(""), "TESTING2")

    findproperty        QName(PackageNamespace(""), "PRODTEST")
    pushstring          "prodtest"
    initproperty        QName(PackageNamespace(""), "PRODTEST")

    findproperty        QName(PackageNamespace(""), "PRODUCTION")
    pushstring          "production"
    initproperty        QName(PackageNamespace(""), "PRODUCTION")

    findproperty        QName(PrivateNamespace(null, "kabam.rotmg.build.impl:BuildEnvironments"), "IP_MATCHER")
    getlex              QName(PackageNamespace(""), "RegExp")
    pushstring          "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}"
    construct           1
    initproperty        QName(PrivateNamespace(null, "kabam.rotmg.build.impl:BuildEnvironments"), "IP_MATCHER")

    returnvoid
   end ; code
  end ; body
 end ; method
 trait const QName(PackageNamespace(""), "LOCALHOST") slotid 1 type QName(PackageNamespace(""), "String") value Utf8("localhost") end
 trait const QName(PackageNamespace(""), "PRIVATE") slotid 2 type QName(PackageNamespace(""), "String") value Utf8("private") end
 trait const QName(PackageNamespace(""), "DEV") slotid 3 type QName(PackageNamespace(""), "String") value Utf8("dev") end
 trait const QName(PackageNamespace(""), "TESTING") slotid 4 type QName(PackageNamespace(""), "String") value Utf8("testing") end
 trait const QName(PackageNamespace(""), "TESTING2") slotid 5 type QName(PackageNamespace(""), "String") value Utf8("testing2") end
 trait const QName(PackageNamespace(""), "PRODTEST") slotid 6 type QName(PackageNamespace(""), "String") value Utf8("prodtest") end
 trait const QName(PackageNamespace(""), "PRODUCTION") slotid 7 type QName(PackageNamespace(""), "String") value Utf8("production") end
 trait const QName(PrivateNamespace(null, "kabam.rotmg.build.impl:BuildEnvironments"), "IP_MATCHER") slotid 8 type QName(PackageNamespace(""), "RegExp") end
end ; class
